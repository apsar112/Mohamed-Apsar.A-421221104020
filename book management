{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2f897e9f-dbe2-477b-9a24-205789cc29dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Book:\n",
    "    def __init__(self, title, author, isbn):\n",
    "        self.title = title\n",
    "        self.author = author\n",
    "        self.isbn = isbn\n",
    "\n",
    "    def __repr__(self):\n",
    "        return f\"Book(title='{self.title}', author='{self.author}', isbn='{self.isbn}')\"\n",
    "\n",
    "class Library:\n",
    "    def __init__(self):\n",
    "        self.books = []\n",
    "\n",
    "    def add_book(self, book):\n",
    "        self.books.append(book)\n",
    "\n",
    "    def search_by_title(self, title):\n",
    "        return [book for book in self.books if title.lower() in book.title.lower()]\n",
    "\n",
    "    def search_by_author(self, author):\n",
    "        return [book for book in self.books if author.lower() in book.author.lower()]\n",
    "\n",
    "    def search_by_isbn(self, isbn):\n",
    "        return [book for book in self.books if isbn == book.isbn]\n",
    "\n",
    "    def display_books(self):\n",
    "        for book in self.books:\n",
    "            print(book)\n",
    "\n",
    "def get_book_details():\n",
    "    title = input(\"Enter book title: \")\n",
    "    author = input(\"Enter book author: \")\n",
    "    while True:\n",
    "        isbntemp = input(\"Enter 13-digit ISBN number: \")\n",
    "        if len(isbntemp)==13:\n",
    "            isbn=isbntemp\n",
    "            break\n",
    "        else:\n",
    "            print(\"enter 13 digit ISBN number\")\n",
    "        \n",
    "    return Book(title, author, isbn)\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    library = Library()\n",
    "    \n",
    "    while True:\n",
    "        print(\"\")\n",
    "        print(\"Enter 1 Add a book\")\n",
    "        print(\"Enter 2 Search by title\")\n",
    "        print(\"Enter 3 Search by author\")\n",
    "        print(\"Enter 4 Search by ISBN\")\n",
    "        print(\"Enter 5 Display all books\")\n",
    "        print(\"Enter 6 Exit\")       \n",
    "        action = int(input(\"Enter your choice: \"))\n",
    "        \n",
    "        if action==1:\n",
    "            book = get_book_details()\n",
    "            library.add_book(book)\n",
    "        elif action==2:\n",
    "            title = input(\"Enter title to search: \")\n",
    "            print(\"Search results:\", library.search_by_title(title))\n",
    "        elif action==3:\n",
    "            author = input(\"Enter author to search: \")\n",
    "            print(\"Search results:\", library.search_by_author(author))\n",
    "        elif action==4:\n",
    "            isbn = input(\"Enter ISBN to search: \")\n",
    "            print(\"Search results:\", library.search_by_isbn(isbn))\n",
    "        elif action==5:\n",
    "            library.display_books()\n",
    "        elif action==6:\n",
    "            print(\"program over\")\n",
    "            break\n",
    "        else:\n",
    "            print(\"Invalid choice. Please try again.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5d0b87a6-f4df-4228-b35a-817f7f2df5da",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
